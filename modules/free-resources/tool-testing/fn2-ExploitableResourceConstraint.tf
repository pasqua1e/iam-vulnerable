resource "aws_iam_policy" "fn2-exploitableResourceConstraint" {
  name        = "fn2-exploitableResourceConstraint"
  path        = "/"
  description = "Allows privesc via iam:CreatePolicyVersion"

  # Terraform's "jsonencode" function converts a
  # Terraform expression result to valid JSON syntax.
  policy = jsonencode({
    Version = "2012-10-17"
    Statement = [
      {
        Action   = "iam:CreatePolicyVersion"
        Effect   = "Allow"
        Resource = "arn:aws:iam::*:policy/fn2-*"
      },
    ]
  })
  tags = {
    yor_trace = "454bc291-287f-4e0d-914a-fdecc68ea6f3"
  }
}

resource "aws_iam_role" "fn2-exploitableResourceConstraint-role" {
  name = "fn2-exploitableResourceConstraint-role"
  assume_role_policy = jsonencode({
    Version = "2012-10-17"
    Statement = [
      {
        Action = "sts:AssumeRole"
        Effect = "Allow"
        Sid    = ""
        Principal = {
          AWS = var.aws_assume_role_arn
        }
      },
    ]
  })
  tags = {
    yor_trace = "b4294525-66cc-4ce6-ab5f-354586610c7b"
  }
}


resource "aws_iam_user" "fn2-exploitableResourceConstraint-user" {
  name = "fn2-exploitableResourceConstraint-user"
  path = "/"
  tags = {
    yor_trace = "1a25e606-05af-47d7-a957-7c1b6df09a8c"
  }
}

resource "aws_iam_access_key" "fn2-exploitableResourceConstraint-user" {
  user = aws_iam_user.fn2-exploitableResourceConstraint-user.name
}


resource "aws_iam_user_policy_attachment" "fn2-exploitableResourceConstraint-user-attach-policy" {
  user       = aws_iam_user.fn2-exploitableResourceConstraint-user.name
  policy_arn = aws_iam_policy.fn2-exploitableResourceConstraint.arn
}

resource "aws_iam_role_policy_attachment" "fn2-exploitableResourceConstraint-role-attach-policy" {
  role       = aws_iam_role.fn2-exploitableResourceConstraint-role.name
  policy_arn = aws_iam_policy.fn2-exploitableResourceConstraint.arn

}  